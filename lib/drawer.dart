import 'package:flutter/services.dart';
import 'package:flutter/material.dart';
class _DrawerLeft extends State {
  final List<String> entries = <String>['message1', 'message2', 'message3'];
  final List<String> settings = <String>['账号与安全', '隐私', '通用', '帮助与反馈', '退出'];
  // final List<String> settingImages = <String>['账号与安全', '隐私', '通用', '帮助与反馈', '退出'];
  final List<int> colorCodesArray = <int>[700, 700, 700];
  final List<String> message = <String>[
    'this is the message1, please tap the screen and get the details',
    '这些年发胖的人越来越多，而与此同时，瘦子也永远吃不胖。瘦得皮包骨，一点也看不出血色。于是，有商家说了，应该补充蛋白质。然后，蛋白粉就开始卖起来了。实际上：一罐400克的蛋白粉要卖两三百块。健康成人每天每公斤体重需要1克的蛋白质，这些数量的蛋白质是完全可以通过正常饮食来满足的。',
    '2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。2020年春节联欢晚会继续采用“北京主会场+各地分会场”的直播模式，突破演播室界限，将春晚舞台的欢声笑语带到观众的身边。日前，已确定在河南郑州、粤港澳大湾区两地设立分会场。'
  ];
  final String accountAndFeedback = 'Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。它也是构建未来的Google Fuchsia应用的主要方式。Flutter组件采用现代响应式框架构建，这是从React中获得的灵感，中心思想是用组件(widget)构建你的UI。 组件描述了在给定其当前配置和状态时他们显示的样子。当组件状态改变，组件会重构它的描述(description)，Flutter会对比之前的描述， 以确定底层渲染树从当前状态转换到下一个状态所需要的最小更改。Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。它也是构建未来的Google Fuchsia应用的主要方式。Flutter组件采用现代响应式框架构建，这是从React中获得的灵感，中心思想是用组件(widget)构建你的UI。 组件描述了在给定其当前配置和状态时他们显示的样子。当组件状态改变，组件会重构它的描述(description)，Flutter会对比之前的描述， 以确定底层渲染树从当前状态转换到下一个状态所需要的最小更改。Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。它也是构建未来的Google Fuchsia应用的主要方式。Flutter组件采用现代响应式框架构建，这是从React中获得的灵感，中心思想是用组件(widget)构建你的UI。 组件描述了在给定其当前配置和状态时他们显示的样子。当组件状态改变，组件会重构它的描述(description)，Flutter会对比之前的描述， 以确定底层渲染树从当前状态转换到下一个状态所需要的最小更改。Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。它也是构建未来的Google Fuchsia应用的主要方式。Flutter组件采用现代响应式框架构建，这是从React中获得的灵感，中心思想是用组件(widget)构建你的UI。 组件描述了在给定其当前配置和状态时他们显示的样子。当组件状态改变，组件会重构它的描述(description)，Flutter会对比之前的描述， 以确定底层渲染树从当前状态转换到下一个状态所需要的最小更改。';
  // int s = 700;
  Widget build(BuildContext context) {
    return  new Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children:  <Widget>[
            DrawerHeader(
              decoration: BoxDecoration(
                color: Colors.blue,
              ),
              child: Text(
                'setting',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 24,
                ),
              ),
            ),
            ListTile(
              leading: Icon(Icons.message),
              title: Text('Messages'),
              onTap: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return new Scaffold(
                      appBar: new AppBar(
                      title: new Text('message Page'),
                    ),
                    body: ListView.separated(
                      padding: const EdgeInsets.all(8),
                      itemCount: entries.length,
                      itemBuilder: (BuildContext context, int index) {
                        return Container(
                          // height: 50,
                          // color: Colors.amber[colorCodes[index]],
                          // child: Center(child: Text('${entries[index]}')),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            mainAxisSize: MainAxisSize.min,
                            children: <Widget>[
                              Flex(
                                direction: Axis.horizontal,
                                children: <Widget>[
                                  Icon(
                                    Icons.message,
                                    color: Colors.lightBlueAccent,
                                    size: 20.0,
                                  ),
                                  Expanded(child: 
                                    Tooltip(
                                      message: '${message[index]}',
                                      child: Text(
                                        '    ' + '${colorCodesArray[index]}${message[index]}',
                                        textAlign: TextAlign.left,
                                        maxLines: 1,
                                        overflow: TextOverflow.ellipsis,
                                        style: TextStyle(fontWeight: FontWeight.bold),
                                      ),
                                    )
                                  ),
                                  GestureDetector(
                                    child: 
                                      // IconButton(
                                      //   icon: Icon(Icons.view_list,),
                                      //   color: Colors.amber[colorCodesArray[index]],
                                      //   tooltip: 'Increase volume by 10',
                                      //   onPressed: () {
                                      //     setState(() {
                                      //       colorCodesArray[index] = 100;
                                      //     });
                                      //   },
                                      // ),
                                    Icon(
                                      Icons.view_list,
                                      // color: Colors.amber,
                                      // color: Color.fromARGB(100, 100, 100, 6),
                                      color: Colors.amber[colorCodesArray[index]]
                                    ),
                                    onTap: () {
                                      print(11);
                                      showDialog<Null>(
                                        context: context,
                                        barrierDismissible: false,
                                        builder: (BuildContext context) {
                                          return new AlertDialog(
                                            title: new Text('message detail'),
                                            content: new SingleChildScrollView(
                                              child: new ListBody(
                                                children: <Widget>[
                                                  new Text('${message[index]}'),
                                                    // new Text('内容 2'),
                                                ],
                                              ),
                                            ),
                                            actions: <Widget>[
                                              new FlatButton(
                                                child: new Text('已阅'),
                                                onPressed: () {
                                                    setState(() {
                                                      // print(s);
                                                      // s = 100;
                                                      colorCodesArray[index] = 100;
                                                    });
                                                    Navigator.of(context).pop();
                                                },
                                              ),
                                            ],
                                          );
                                        },
                                      ).then((val) {
                                        print(val);
                                      });
                                    },
                                  )
                                ]
                              )
                            ],
                          ),

                        );
                      },
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                    )
                  );
                }));
              },
            ),
            ListTile(
              leading: Icon(Icons.account_circle),
              title: Text('Profile'),
              onTap: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return new Scaffold(
                      appBar: new AppBar(
                      title: new Text('Profile Page'),
                    ),
                  );
                }));
              },
            ),
           ListTile(
              leading: Icon(Icons.settings),
              title: Text('Settings'),
              onTap: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return new Scaffold(
                      appBar: new AppBar(
                      title: new Text('Settting Page'),
                    ),
                    body: ListView.separated(
                      padding: const EdgeInsets.all(8),
                      itemCount: settings.length,
                      itemBuilder: (BuildContext context, int index) {
                        return Container(
                          height: 50,
                          // color: Colors.amber[colorCodes[index]],
                          child: Row(
                            children: <Widget>[ 
                              new Expanded(
                                flex: 1,
                                child: new Image.network( 'https://avatar.csdn.net/8/9/A/3_chenlove1.jpg',height: 20, )
                              ),
                              new Expanded(
                                flex: 5,
                                child: 
                                  Text(
                                    '${settings[index]}',
                                    textAlign: TextAlign.left,
                                  ),
                              ),
                              new Expanded(
                                flex: 1,
                                child: 
                                  ListTile(
                                    leading: Icon(Icons.keyboard_arrow_right),
                                    title: Text('close the drawer'),
                                    onTap: () async{
                                      // change app state...
                                      // Navigator.pop(context); // close the drawer
                                      // exit(0);
                                      if(index == 3) {
                                        return Navigator.push(context, MaterialPageRoute(builder: (context) {
                                          return new Scaffold(
                                            appBar: new AppBar(
                                              title: new Text('帮助与反馈'),
                                            ),
                                            body: new SingleChildScrollView(
                                              child: Column(
                                                children: <Widget>[
                                                  new Image.network( 
                                                    'https://cdn.jsdelivr.net/gh/flutterchina/website@1.0/images/flutter-mark-square-100.png',
                                                    height: 200, 
                                                  ),
                                                  Container(
                                                    child:Text(
                                                      '        $accountAndFeedback',
                                                      style: TextStyle(height: 1.5, fontSize: 15),
                                                      // maxLines: 10,
                                                      // overflow: TextOverflow.ellipsis,
                                                      softWrap: true
                                                    ),
                                                  )
                                                ],
                                              ),
                                              // alignment: Alignment.topLeft,
                                              padding: EdgeInsets.all(20),
                                            )
                                          );
                                        }));
                                      }
                                      await SystemChannels.platform.invokeMethod('SystemNavigator.pop');
                                    },
                                  ),
                              )
                            ],
                          )
                        );
                      },
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                    )
                  );
                }));
              },
            ),
            ListTile(
              leading: Icon(Icons.close),
              title: Text('close the drawer'),
              onTap: () {
                // change app state...
                Navigator.pop(context); // close the drawer
              },
            ),
          ],
        ),
      );
  }
}
class DrawerLeft extends StatefulWidget{
  DrawerLeft({Key key, this.title}) : super(key: key);
  final String title;

  // @override
  _DrawerLeft createState() => _DrawerLeft();
  
}